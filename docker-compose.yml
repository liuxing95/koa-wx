version: "3"
services: # 服务列表
  # node: # node 服务
  #   build: . # Dockerfile 的目录，用于构建镜像
  #   #container_name: node-server-1 # 容器名称
  #   # ports: #暴露的端口
  #   #   - "3000:3000"
  #   expose:
  #     - "3000"
  #   restart: always # 自动重启
  #   environment: # 设置环境变量
  #     - NODE_ENV=production
  #   networks: # 加入网络
  #     - "my-network"
  #   command: npm run pm2 # 覆盖容器启动后默认执行的命令

  # nginx:
  #   image: nginx:latest #指定 nginx 镜像
  #   ports: # 将本机的 8080 端口映射到容器的80端口
  #       - "8080:80"            
  #   container_name: nginx-node
  #   restart: always
  #   volumes: # 映射本机 /nginx.conf 文件到 容器的 /etc/nginx/nginx.conf:ro 文件
  #       - "./nginx.conf:/etc/nginx/nginx.conf:ro"
  #   networks: 
  #       - "my-network"
  #   links: # 设置 node 服务别名，其实是设置/etc/hosts的域名解析
  #       - "node"
  #   depends_on: # 指定依赖于哪个服务
  #       - node
  
  redis:
    image: redis:latest
    container_name: monitor-redis
    volumes:
      - ./data:/data
    command: redis-server --requirepass liuxing0724
    ports:
      - "6379:6379"
    restart: always
    logging: 
      driver: "json-file"
      options:
        max-size: "1m"

  mysql:
    image: mysql:latest
    container_name: monitor-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "liuxing0724"
      MYSQL_USER: 'liuxing'
      MYSQL_PASS: 'liuxing0724'
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - "./mysql/db:/var/lib/mysql"
      - "./mysql/conf/my.cnf:/etc/my.cnf"
      - "./mysql/init:/docker-entrypoint-initdb.d/"
  mongo:
    image: mongo:latest
    container_name: monitor-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=liuxing0724
    ports:
      - "27017:27017"
    volumes:
      - "./data/mongo:/data/db"
      - "./data/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    command: mongod
  
networks: # 网络
  my-network: # 网络名称
    driver: bridge